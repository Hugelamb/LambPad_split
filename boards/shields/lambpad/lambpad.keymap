/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

#define NAV_L 1
#define OTH_L 2
#define NUM_L 3
#define SYM_L 4
#define MED_L 5
#define FUN_L 6

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick_tap_ms = <200>; };
/ {
    combos {
        compatible = "zmk,combos";

        med_mo {
	    timeout-ms = <50>;
            key-positions = <36 37>; // LALT and LGUI on default layer
            bindings = <&mo MED_L>;
        };

        fn_mo {
	    timeout-ms = <50>;
            key-positions = <42 43>; // BSPC and RGUI on default layer
            bindings = <&mo FUN_L>;
        };

    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };


    keymap {
        compatible = "zmk,keymap";

        default_layer {
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
// |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
//                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |
            bindings = <
&kp TAB   &kp Q      &kp W      &kp E       &kp R       &kp T                      &kp Y  &kp U       &kp I       &kp O      &kp P    &kp MINUS
&kp LCTRL &hm LGUI A &hm LALT S &hm LCTRL D &hm LSHFT F &kp G                      &kp H  &hm RSHFT J &hm RCTRL K &hm LALT L &kp SEMI &kp SQT
&kp LSHFT &kp Z      &kp X      &kp C       &kp V       &kp B                      &kp N  &kp M       &kp COMMA   &kp DOT    &kp FSLH &kp RSHFT
                                &kp LALT    &kp LGUI    &mo 1  &kp SPACE  &kp RET  &mo OTH_L &kp BSPC    &kp RGUI
            >;
        };

        fun_layer  {

bindings = <
&ext_power EP_ON  &kp Q  &kp W  &kp E    &kp R    &kp T                      &kp Y  &kp U    &kp I     &kp O   &kp P    &kp MINUS
&ext_power EP_OFF &kp A  &kp S  &kp D    &kp F    &kp G                      &kp H  &kp J    &kp K     &kp L   &kp SEMI &kp SQT
&ext_power EP_TOG &kp Z  &kp X  &kp C    &kp V    &kp B                      &kp N  &kp M    &kp COMMA &kp DOT &kp FSLH &kp RSHFT
                        &kp LALT &kp LGUI &mo 1  &kp SPACE  &kp RET  &mo 2  &kp BSPC &kp RGUI
            >;
        };

    };
};